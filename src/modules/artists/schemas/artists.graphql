type Artist {
    _id: ID!
    firstName: String!
    secondName: String!
    middleName: String
    birthDate: String
    birthPlace: String
    country: String!
    bands: [Band]
    instruments: [String]
}

input NoIdArtist {
    firstName: String!
    secondName: String!
    middleName: String
    birthDate: String
    birthPlace: String
    country: String!
    bands: [String]
    instruments: [String]
}

type Query {
    artist(id: String): Artist
    artists: [Artist]
}

type Mutation {
    createArtist(artist: NoIdArtist): Artist
    deleteArtist(id: ID): DeletedElement
    updateArtist(id: ID, artist: NoIdArtist): Artist
}